{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/Popup.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","handleDate","e","setState","target","value","handleText","handleCheckbox","handleClick","length","props","add","textInput","document","querySelector","style","border","alert","setTimeout","maxDate","this","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","task","important","finishDate","active","color","change","show","delete","finishTime","toLocaleString","TaskList","tasks","filter","done","sort","a","b","activeTasks","map","doneTasks","Popup","handleCancelClick","display","handleSaveClick","edit","React","App","counter","taskToEdit","deleteTask","index","findIndex","splice","changeTaskStatus","Array","from","forEach","getTime","addTask","private","prevState","showPopup","editTaskId","editTask","editId","completedUpdate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uTA8FeA,G,wNA1FbC,SAAU,IAAIC,MAAOC,cAAcC,MAAM,EAAG,I,EAC5CC,MAAQ,CACNC,KAAM,GACNC,SAAS,EACTC,MAAM,IAAIN,MAAOC,cAAcC,MAAM,EAAG,K,EAE1CK,WAAa,SAACC,GACZ,EAAKC,SAAS,CACZH,KAAME,EAAEE,OAAOC,S,EAGnBC,WAAa,SAACJ,GACZ,EAAKC,SAAS,CACZL,KAAMI,EAAEE,OAAOC,S,EAGnBE,eAAiB,SAACL,GAChB,EAAKC,SAAS,CACZJ,QAASG,EAAEE,OAAOL,W,EAGtBS,YAAc,WAAO,IAAD,EACc,EAAKX,MAA7BC,EADU,EACVA,KAAME,EADI,EACJA,KAAMD,EADF,EACEA,QACpB,GAAID,EAAKW,OAAS,GAAc,KAATT,EAAa,CACtB,EAAKU,MAAMC,IAAIb,EAAME,EAAMD,IAErC,EAAKI,SAAS,CACZJ,SAAS,EACTC,KAAM,EAAKP,QACXK,KAAM,SAGL,CACL,IAAMc,EAAYC,SAASC,cAAc,2BACzCF,EAAUG,MAAMC,OAAS,gBACzBC,MAAM,wBACNC,YAAW,WACTN,EAAUG,MAAMC,OAAS,KACxB,O,uDAIL,IAAIG,EAAqC,EAA3BC,KAAK3B,QAAQG,MAAM,EAAG,GAAS,EAE7C,OADAuB,GAAoB,SAElB,qCACE,sBAAKE,UAAU,oBAAf,UACE,uBACEC,KAAK,OACLC,YAAY,uBACZlB,MAAOe,KAAKvB,MAAMC,KAClB0B,SAAUJ,KAAKd,WACfe,UAAU,2BAEZ,sBAAKA,UAAU,kBAAf,UACE,uBACEI,GAAG,YACHH,KAAK,WACLvB,QAASqB,KAAKvB,MAAME,QACpByB,SAAUJ,KAAKb,eACfc,UAAU,8BAEZ,uBAAOK,QAAQ,YAAYL,UAAU,yBAArC,0BAIF,sBAAKA,UAAU,iBAAf,UACE,uBAAOK,QAAQ,OAAOL,UAAU,wBAAhC,sBAGA,uBACEC,KAAK,OACLjB,MAAOe,KAAKvB,MAAMG,KAClB2B,IAAKP,KAAK3B,QACVmC,IAAKT,EACLK,SAAUJ,KAAKnB,WACfoB,UAAU,+BAIhB,qBAAKA,UAAU,MAAf,SACE,wBAAQA,UAAU,WAAWQ,QAAST,KAAKZ,YAA3C,+B,GAlFYsB,cCuDPC,G,MAvDF,SAACrB,GACZ,IADsB,EAEoCA,EAAMsB,KAAxDlC,EAFc,EAEdA,KAAME,EAFQ,EAERA,KAAMyB,EAFE,EAEFA,GAAIQ,EAFF,EAEEA,UAAWC,EAFb,EAEaA,WAEnC,GAJsB,EAEyBC,OAG7C,OACE,sBAAKd,UAAU,uBAAf,UACE,qBACEA,UAAU,kBACVN,MAAOkB,EARQ,CAAEG,MAAO,OAQY,KAFtC,SAIGtC,IAEH,uBAAMuB,UAAU,iBAAhB,uBAA4CrB,EAA5C,OACA,sBAAKqB,UAAU,aAAf,UACE,wBACEA,UAAU,sBACVQ,QAAS,kBAAMnB,EAAM2B,OAAO,CAAEZ,QAFhC,SAIE,mBAAGJ,UAAU,mBAEf,wBACEA,UAAU,sBACVQ,QAAS,kBAAMnB,EAAM4B,KAAK,CAAEb,QAF9B,kBAMA,wBACEJ,UAAU,wBACVQ,QAAS,kBAAMnB,EAAM6B,OAAO,CAAEd,QAFhC,SAIE,mBAAGJ,UAAU,yBAMrB,IAAMmB,EAAa,IAAI9C,KAAKwC,GAAYO,iBACxC,OACE,sBAAKpB,UAAU,uBAAf,UACE,qBAAKA,UAAU,kBAAf,SAAkCvB,IAClC,sBAAKuB,UAAU,kBAAf,iCACsB,+BAAOmB,IAD7B,OAGA,wBACEnB,UAAU,wBACVQ,QAAS,kBAAMnB,EAAM6B,OAAO,CAAEd,QAFhC,SAIE,mBAAGJ,UAAU,wBCsBRqB,G,MArEE,SAAChC,GAChB,IAAMyB,EAASzB,EAAMiC,MAAMC,QAAO,SAACZ,GAAD,OAAUA,EAAKG,UAC3CU,EAAOnC,EAAMiC,MAAMC,QAAO,SAACZ,GAAD,OAAWA,EAAKG,UAE5CA,EAAO1B,QAAU,GACnB0B,EAAOW,MAAK,SAACC,EAAGC,GACd,OAAID,EAAEtB,GAAKuB,EAAEvB,GACJ,EAELsB,EAAEtB,GAAKuB,EAAEvB,IACH,EAEH,KAGPoB,EAAKpC,QAAU,GACjBoC,EAAKC,MAAK,SAACC,EAAGC,GACZ,OAAID,EAAEb,WAAac,EAAEd,WACZ,EAELa,EAAEb,WAAac,EAAEd,YACX,EAEH,KAIX,IAAMe,EAAcd,EAAOe,KAAI,SAAClB,GAAD,OAC7B,cAAC,EAAD,CAEEA,KAAMA,EACNK,OAAQ3B,EAAM2B,OACdE,OAAQ7B,EAAM6B,OACdD,KAAM5B,EAAM4B,MAJPN,EAAKP,OAOR0B,EAAYN,EAAKK,KAAI,SAAClB,GAAD,OACzB,cAAC,EAAD,CAEEA,KAAMA,EACNK,OAAQ3B,EAAM2B,OACdE,OAAQ7B,EAAM6B,QAHTP,EAAKP,OAMd,OACE,sBAAKJ,UAAU,YAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,mBAAd,oBACC4B,EAAYxC,OAAS,EACpBwC,EAEA,mBAAG5B,UAAU,mBAAb,4CAGJ,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,SACGwB,EAAKpC,OAAS,GAAd,gBAA2BoC,EAAKpC,OAAhC,OAEFoC,EAAKpC,OAAS,GACb,qBAAKY,UAAU,2BAAf,+CAID8B,EAAUvD,MAAM,EAAG,WCwCbwD,G,kNAvGb3D,SAAU,IAAIC,MAAOC,cAAcC,MAAM,EAAG,I,EAC5CC,MAAQ,CACNC,KAAM,GACNC,SAAS,EACTC,KAAM,I,EAERqD,kBAAoB,WAClBxC,SAASC,cAAc,UAAUC,MAAMuC,QAAU,OAEjD,EAAKnD,SAAS,CACZJ,SAAS,EACTC,KAAM,EAAKP,QACXK,KAAM,M,EAGVG,WAAa,SAACC,GACZ,EAAKC,SAAS,CACZH,KAAME,EAAEE,OAAOC,S,EAGnBC,WAAa,SAACJ,GACZ,EAAKC,SAAS,CACZL,KAAMI,EAAEE,OAAOC,S,EAGnBE,eAAiB,SAACL,GAChB,EAAKC,SAAS,CACZJ,QAASG,EAAEE,OAAOL,W,EAGtBwD,gBAAkB,WAAO,IAAD,EACU,EAAK1D,MAA7BC,EADc,EACdA,KAAME,EADQ,EACRA,KAAMD,EADE,EACFA,QAChBD,EAAKW,OAAS,GAAc,KAATT,EACR,EAAKU,MAAM8C,KAAK1D,EAAME,EAAMD,IAEvC,EAAKI,SAAS,CACZJ,SAAS,EACTC,KAAM,EAAKP,QACXK,KAAM,MAIVe,SAASC,cAAc,iBAAiBC,MAAMC,OAAS,gBACvDC,MAAM,0B,uDAIR,IAAIE,EAAqC,EAA3BC,KAAK3B,QAAQG,MAAM,EAAG,GAAS,EAE7C,OADAuB,GAAoB,SAElB,sBAAKE,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,wBACA,sBAAKA,UAAU,cAAf,UACE,uBACEC,KAAK,OACLD,UAAU,eACVE,YAAY,mCACZlB,MAAOe,KAAKvB,MAAMC,KAClB0B,SAAUJ,KAAKd,aAEjB,sBAAKe,UAAU,mBAAf,UACE,uBACEI,GAAG,YACHH,KAAK,WACLvB,QAASqB,KAAKvB,MAAME,QACpByB,SAAUJ,KAAKb,eACfc,UAAU,+BAEZ,uBAAOK,QAAQ,YAAYL,UAAU,0BAArC,0BAIF,sBAAKA,UAAU,kBAAf,UACE,uBAAOK,QAAQ,OAAOL,UAAU,yBAAhC,sBAGA,uBACEC,KAAK,OACLjB,MAAOe,KAAKvB,MAAMG,KAClB2B,IAAKP,KAAK3B,QACVmC,IAAKT,EACLK,SAAUJ,KAAKnB,WACfoB,UAAU,gCAIhB,sBAAKA,UAAU,mBAAf,UACE,wBAAQA,UAAU,oBAAoBQ,QAAST,KAAKmC,gBAApD,kBAGA,wBACElC,UAAU,oBACVQ,QAAST,KAAKiC,kBAFhB,uBAOF,mBAAGhC,UAAU,uB,GAlGDoC,IAAM3B,YCiGX4B,E,4MA7FbC,QAAU,E,EACVC,WAAa,E,EACb/D,MAAQ,CACN8C,MAAO,I,EAETkB,WAAa,SAACpC,GAEZ,IAAMkB,EAAK,YAAO,EAAK9C,MAAM8C,OACvBmB,EAAQnB,EAAMoB,WAAU,SAAC/B,GAAD,OAAUA,EAAKP,KAAOA,EAAGA,MACvDkB,EAAMqB,OAAOF,EAAO,GACpB,EAAK3D,SAAS,CAAEwC,W,EAOlBsB,iBAAmB,SAACxC,GAClB,IAAMkB,EAAQuB,MAAMC,KAAK,EAAKtE,MAAM8C,OACpCA,EAAMyB,SAAQ,SAACpC,GACTA,EAAKP,KAAOA,EAAGA,KACjBO,EAAKG,QAAS,EACdH,EAAKE,YAAa,IAAIxC,MAAO2E,cAGjC,EAAKlE,SAAS,CACZwC,W,EAGJ2B,QAAU,SAACxE,EAAME,EAAMiC,GACrB,IAAMqC,EAAU,CACd7C,GAAI,EAAKkC,QACT7D,OACAE,OACAiC,YACAsC,SAAS,EACTpC,QAAQ,EACRD,WAAY,MAMd,OAJA,EAAKyB,UACL,EAAKxD,UAAS,SAACqE,GAAD,MAAgB,CAC5B7B,MAAM,GAAD,mBAAM6B,EAAU7B,OAAhB,CAAuB2B,SAEvB,G,EAETG,UAAY,SAAChD,GACXZ,SAASC,cAAc,UAAUC,MAAMuC,QAAU,OACjD,IAAMoB,EAAajD,EAAGA,GACtB,EAAKmC,WAAac,G,EAEpBC,SAAW,SAAC7E,EAAME,EAAMiC,GACtB,IAAM2C,EAAS,EAAKhB,WACde,EAAW,CACflD,GAAImD,EACJ9E,OACAE,OACAiC,YACAsC,SAAS,EACTpC,QAAQ,EACRD,WAAY,MAGRS,EAAK,YAAO,EAAK9C,MAAM8C,OACvBmB,EAAQnB,EAAMoB,WAAU,SAAC/B,GAAD,OAAUA,EAAKP,KAAOmD,KACpDjC,EAAMqB,OAAOF,EAAO,GACpB,IAAMe,EAAe,sBAAOlC,GAAP,CAAcgC,IAOnC,OALA,EAAKxE,SAAS,CACZwC,MAAOkC,IAGThE,SAASC,cAAc,UAAUC,MAAMuC,QAAU,QAC1C,G,uDAGP,OACE,sBAAKjC,UAAU,MAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,oBAAIA,UAAU,gBAAd,uBACA,cAAC,EAAD,CAASV,IAAKS,KAAKkD,aAErB,cAAC,EAAD,CACE3B,MAAOvB,KAAKvB,MAAM8C,MAClBJ,OAAQnB,KAAKyC,WACbxB,OAAQjB,KAAK6C,iBACb3B,KAAMlB,KAAKqD,YAEb,cAAC,EAAD,CAAOjB,KAAMpC,KAAKuD,SAAUhC,MAAOvB,KAAKvB,MAAM8C,e,GAxFpCb,aCMHgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5E,SAAS6E,eAAe,SAM1BZ,M","file":"static/js/main.9eab170a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: new Date().toISOString().slice(0, 10),\r\n  };\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n  handleClick = () => {\r\n    const { text, date, checked } = this.state;\r\n    if (text.length > 0 && date !== \"\") {\r\n      const add = this.props.add(text, date, checked);\r\n      if (add) {\r\n        this.setState({\r\n          checked: false,\r\n          date: this.minDate,\r\n          text: \"\",\r\n        });\r\n      }\r\n    } else {\r\n      const textInput = document.querySelector(\".form__task-description\");\r\n      textInput.style.border = \"2px solid red\";\r\n      alert(\"add task description\");\r\n      setTimeout(() => {\r\n        textInput.style.border = \"\";\r\n      }, 2000);\r\n    }\r\n  };\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n    return (\r\n      <>\r\n        <div className=\"header__form form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add task description\"\r\n            value={this.state.text}\r\n            onChange={this.handleText}\r\n            className=\"form__task-description\"\r\n          />\r\n          <div className=\"form__important\">\r\n            <input\r\n              id=\"important\"\r\n              type=\"checkbox\"\r\n              checked={this.state.checked}\r\n              onChange={this.handleCheckbox}\r\n              className=\"form__important--checkbox\"\r\n            />\r\n            <label htmlFor=\"important\" className=\"form__important--label\">\r\n              Important\r\n            </label>\r\n          </div>\r\n          <div className=\"form__deadline\">\r\n            <label htmlFor=\"date\" className=\"form__deadline--label\">\r\n              Deadline\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.date}\r\n              min={this.minDate}\r\n              max={maxDate}\r\n              onChange={this.handleDate}\r\n              className=\"form__deadline--date\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn\">\r\n          <button className=\"btn__add\" onClick={this.handleClick}>\r\n            Add task\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = (props) => {\r\n  const importantStyle = { color: \"red\" };\r\n  const { text, date, id, important, finishDate, active } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <div className=\"todo-list__item item\">\r\n        <div\r\n          className=\"item__important\"\r\n          style={important ? importantStyle : null}\r\n        >\r\n          {text}\r\n        </div>\r\n        <span className=\"item__deadline\">Deadline: {date} </span>\r\n        <div className=\"item__btn \">\r\n          <button\r\n            className=\"btn-task  btn--done\"\r\n            onClick={() => props.change({ id })}\r\n          >\r\n            <i className=\"fas fa-check\"></i>\r\n          </button>\r\n          <button\r\n            className=\"btn-task  btn--edit\"\r\n            onClick={() => props.show({ id })}\r\n          >\r\n            EDIT\r\n          </button>\r\n          <button\r\n            className=\"btn-task  btn--delete\"\r\n            onClick={() => props.delete({ id })}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const finishTime = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <div className=\"todo-list__done-item\">\r\n        <div className=\"item__important\">{text}</div>\r\n        <div className=\"item__done-time\">\r\n          (Confirmation date: <span>{finishTime}</span>)\r\n        </div>\r\n        <button\r\n          className=\"btn-task  btn--delete\"\r\n          onClick={() => props.delete({ id })}\r\n        >\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"./TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  const active = props.tasks.filter((task) => task.active);\r\n  const done = props.tasks.filter((task) => !task.active);\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n      if (a.id > b.id) {\r\n        return 1;\r\n      }\r\n      if (a.id < b.id) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = active.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      change={props.change}\r\n      delete={props.delete}\r\n      show={props.show}\r\n    />\r\n  ));\r\n  const doneTasks = done.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      change={props.change}\r\n      delete={props.delete}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <div className=\"todo-list--active\">\r\n        <h1 className=\"todo-list__title\">TO DO:</h1>\r\n        {activeTasks.length > 0 ? (\r\n          activeTasks\r\n        ) : (\r\n          <p className=\"todo-list__empty\">Your to do list is empty :)</p>\r\n        )}\r\n      </div>\r\n      <div className=\"todo-list--done\">\r\n        <h2 className=\"todo-list__title\">\r\n          {done.length > 0 ? `Done (${done.length})` : false}\r\n        </h2>\r\n        {done.length > 5 && (\r\n          <div className=\"todo-list__done-overflow\">\r\n            You can see only last 5 done task\r\n          </div>\r\n        )}\r\n        {doneTasks.slice(0, 5)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"./Popup.css\";\r\n\r\nclass Popup extends React.Component {\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: \"\",\r\n  };\r\n  handleCancelClick = () => {\r\n    document.querySelector(\".popup\").style.display = \"none\";\r\n\r\n    this.setState({\r\n      checked: false,\r\n      date: this.minDate,\r\n      text: \"\",\r\n    });\r\n  };\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n  handleSaveClick = () => {\r\n    const { text, date, checked } = this.state;\r\n    if (text.length > 0 && date !== \"\") {\r\n      const edit = this.props.edit(text, date, checked);\r\n      if (edit) {\r\n        this.setState({\r\n          checked: false,\r\n          date: this.minDate,\r\n          text: \"\",\r\n        });\r\n      }\r\n    } else {\r\n      document.querySelector(\".popup__input\").style.border = \"2px solid red\";\r\n      alert(\"add task description\");\r\n    }\r\n  };\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n    return (\r\n      <div className=\"popup\">\r\n        <h3 className=\"popup__title\">Edit task:</h3>\r\n        <div className=\"popup__body\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"popup__input\"\r\n            placeholder=\"Put in your new task description\"\r\n            value={this.state.text}\r\n            onChange={this.handleText}\r\n          />\r\n          <div className=\"popup__important\">\r\n            <input\r\n              id=\"important\"\r\n              type=\"checkbox\"\r\n              checked={this.state.checked}\r\n              onChange={this.handleCheckbox}\r\n              className=\"popup__important--checkbox\"\r\n            />\r\n            <label htmlFor=\"important\" className=\"popup__important--label\">\r\n              Important\r\n            </label>\r\n          </div>\r\n          <div className=\"popup__deadline\">\r\n            <label htmlFor=\"date\" className=\"popup__deadline--label\">\r\n              Deadline\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.date}\r\n              min={this.minDate}\r\n              max={maxDate}\r\n              onChange={this.handleDate}\r\n              className=\"popup__deadline--date\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"popup__btn-group\">\r\n          <button className=\"popup__btn accept\" onClick={this.handleSaveClick}>\r\n            Save\r\n          </button>\r\n          <button\r\n            className=\"popup__btn cancel\"\r\n            onClick={this.handleCancelClick}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n        <p className=\"popup__info\"></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nimport Popup from \"./Popup\";\n\nclass App extends Component {\n  counter = 0;\n  taskToEdit = 0;\n  state = {\n    tasks: [],\n  };\n  deleteTask = (id) => {\n    //WERSJA 1\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex((task) => task.id === id.id);\n    tasks.splice(index, 1);\n    this.setState({ tasks });\n\n    //wersja 2\n    // let tasks = [...this.state.tasks];\n    // tasks.filter((task) => task.id !== id.id);\n    // this.setState({ tasks });\n  };\n  changeTaskStatus = (id) => {\n    const tasks = Array.from(this.state.tasks);\n    tasks.forEach((task) => {\n      if (task.id === id.id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n    this.setState({\n      tasks,\n    });\n  };\n  addTask = (text, date, important) => {\n    const addTask = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      private: true,\n      active: true,\n      finishDate: null,\n    };\n    this.counter++;\n    this.setState((prevState) => ({\n      tasks: [...prevState.tasks, addTask],\n    }));\n    return true;\n  };\n  showPopup = (id) => {\n    document.querySelector(\".popup\").style.display = \"flex\";\n    const editTaskId = id.id;\n    this.taskToEdit = editTaskId;\n  };\n  editTask = (text, date, important) => {\n    const editId = this.taskToEdit;\n    const editTask = {\n      id: editId,\n      text,\n      date,\n      important,\n      private: true,\n      active: true,\n      finishDate: null,\n    };\n\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex((task) => task.id === editId);\n    tasks.splice(index, 1);\n    const completedUpdate = [...tasks, editTask];\n\n    this.setState({\n      tasks: completedUpdate,\n    });\n\n    document.querySelector(\".popup\").style.display = \"none\";\n    return true;\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1 className=\"header__title\"> TODO APP</h1>\n          <AddTask add={this.addTask} />\n        </header>\n        <TaskList\n          tasks={this.state.tasks}\n          delete={this.deleteTask}\n          change={this.changeTaskStatus}\n          show={this.showPopup}\n        />\n        <Popup edit={this.editTask} tasks={this.state.tasks} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}